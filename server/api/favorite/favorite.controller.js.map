{"version":3,"sources":["api/favorite/favorite.controller.js"],"names":["index","show","create","createMulti","upsert","patch","destroy","async","require","respondWithResult","res","statusCode","entity","status","json","patchUpdates","patches","apply","err","reject","save","removeEntity","remove","then","end","handleEntityNotFound","handleError","send","req","find","exec","catch","findById","params","id","$favorite","events","body","update","name_lower","_doc","favorite","list","map","item","performer","$in","console","log","ev","newFavorites","name","toLowerCase","fr","ttt","_id","findOneAndUpdate","setDefaultsOnInsert","runValidators"],"mappings":"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","file":"favorite.controller.js","sourcesContent":["/**\n * Using Rails-like standard naming convention for endpoints.\n * GET     /api/favorites              ->  index\n * POST    /api/favorites              ->  create\n * GET     /api/favorites/:id          ->  show\n * PUT     /api/favorites/:id          ->  upsert\n * PATCH   /api/favorites/:id          ->  patch\n * DELETE  /api/favorites/:id          ->  destroy\n */\n\n'use strict';\n\nimport jsonpatch from 'fast-json-patch';\nimport Favorite from './favorite.model';\nimport Event from '../event/event.model'\nimport Performer from '../performer/performer.model';\nvar async = require('async');\n\nfunction respondWithResult(res, statusCode) {\n    statusCode = statusCode || 200;\n    return function(entity) {\n        if (entity) {\n            res.status(statusCode).json(entity);\n        }\n    };\n}\n\nfunction patchUpdates(patches) {\n    return function(entity) {\n        try {\n            jsonpatch.apply(entity, patches, /*validate*/ true);\n        } catch (err) {\n            return Promise.reject(err);\n        }\n\n        return entity.save();\n    };\n}\n\nfunction removeEntity(res) {\n    return function(entity) {\n        if (entity) {\n            return entity.remove()\n                .then(() => {\n                    res.status(204).end();\n                });\n        }\n    };\n}\n\nfunction handleEntityNotFound(res) {\n    return function(entity) {\n        if (!entity) {\n            res.status(404).end();\n            return null;\n        }\n        return entity;\n    };\n}\n\nfunction handleError(res, statusCode) {\n    statusCode = statusCode || 500;\n    return function(err) {\n        res.status(statusCode).send(err);\n    };\n}\n\n// Gets a list of Favorites\nexport function index(req, res) {\n    return Favorite.find().exec()\n        .then(respondWithResult(res))\n        .catch(handleError(res));\n}\n\n// Gets a single Favorite from the DB\nexport function show(req, res) {\n    return Favorite.findById(req.params.id).exec()\n        .then(handleEntityNotFound(res))\n        .then(respondWithResult(res))\n        .catch(handleError(res));\n}\n\n// Creates a new Favorite in the DB\nexport function create(req, res) {\n    let $favorite = {};\n    //console.log(req.body)\n    let events = [];\n    return Favorite.create(req.body)\n\n    .then(res => {\n            Event.update({ name_lower: res._doc.name_lower }, { favorite: true });\n            Performer.update({ name_lower: res._doc.name_lower }, { favorite: true });\n            Performer.find({ name_lower: res._doc.name_lower })\n                .then(list => {\n                    list = list.map(item => item.id)\n                    Event.update({ performer: { $in: list } }, { favorite: true })\n                        .then(res => console.log(res));\n                    let ev = Event.find({ performer: { $in: list } })\n                        .then(res => console.log(res));\n                    console.log('list', ev);\n                });\n\n            return res;\n        })\n        .then(respondWithResult(res, 201))\n        .catch(handleError(res));\n}\n\n// Creates Multi  new Favorites in the DB\nexport function createMulti(req, res) {\n\n    let newFavorites = req.body.map(item => { return { name: item, name_lower: item.toLowerCase() } });\n    return Favorite.create(newFavorites)\n        .then(res => {\n            res.map(fr => {\n                // debugger\n                Event.update({ name_lower: fr._doc.name_lower }, { favorite: true });\n                Performer.update({ name_lower: fr._doc.name_lower }, { favorite: true })\n                    .then(ttt => console.log(\"Perf:\", ttt));\n                Performer.find({ name_lower: fr._doc.name_lower })\n                    .then(list => {\n                        list = list.map(item => item.id)\n                        Event.update({ performer: { $in: list } }, { favorite: true })\n                            .then(res => console.log(res));\n                        let ev = Event.find({ performer: { $in: list } })\n                            .then(res => console.log(res));\n                        //console.log('list', ev);\n                    });\n\n            });\n            return res;\n        })\n        .then(respondWithResult(res, 201))\n        .catch(handleError(res));\n\n    //console.log(newFavorites);\n\n    //return res.status(200).json(req.body);\n}\n\n// Upserts the given Favorite in the DB at the specified ID\nexport function upsert(req, res) {\n    if (req.body._id) {\n        delete req.body._id;\n    }\n    return Favorite.findOneAndUpdate(req.params.id, req.body, { upsert: true, setDefaultsOnInsert: true, runValidators: true }).exec()\n\n    .then(respondWithResult(res))\n        .catch(handleError(res));\n}\n\n// Updates an existing Favorite in the DB\nexport function patch(req, res) {\n    if (req.body._id) {\n        delete req.body._id;\n    }\n    return Favorite.findById(req.params.id).exec()\n        .then(handleEntityNotFound(res))\n        .then(patchUpdates(req.body))\n        .then(respondWithResult(res))\n        .catch(handleError(res));\n}\n\n// Deletes a Favorite from the DB\nexport function destroy(req, res) {\n    return Favorite.findById(req.params.id).exec()\n        .then(handleEntityNotFound(res))\n        .then(removeEntity(res))\n        .catch(handleError(res));\n}"]}