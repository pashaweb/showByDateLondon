{"version":3,"sources":["api/event/event.controller.js"],"names":["index","getEventByDatesRangeAndType","show","create","update","destroy","destroyAll","test","moment","require","respondWithResult","res","statusCode","entity","status","json","saveUpdates","updates","updated","merge","save","then","removeEntity","remove","end","removeAllEntity","handleEntityNotFound","handleError","err","send","req","find","populate","exec","catch","dateFrom","unix","params","toDate","type","eventType","dateTo","query","limit","Number","skip","events","count","total","console","log","findById","id","body","_id","request","cheerio","uri","error","response","$","load","list"],"mappings":"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","file":"api/event/event.controller.js","sourcesContent":["/**\n * Using Rails-like standard naming convention for endpoints.\n * GET     /y              ->  index\n * POST    /y              ->  create\n * GET     /y/:id          ->  show\n * PUT     /y/:id          ->  update\n * DELETE  /y/:id          ->  destroy\n */\n'use strict';\n\nimport _ from 'lodash';\nimport Event from './event.model';\nvar moment = require('moment');\n\nfunction respondWithResult(res, statusCode) {\n\n  statusCode = statusCode || 200;\n  return function (entity) {\n    if (entity) {\n      res.status(statusCode).json(entity);\n    }\n  };\n}\n\nfunction saveUpdates(updates) {\n  return function (entity) {\n    var updated = _.merge(entity, updates);\n    return updated.save()\n      .then(updated => {\n        return updated;\n      });\n  };\n}\n\nfunction removeEntity(res) {\n  return function (entity) {\n    if (entity) {\n      return entity.remove()\n        .then(() => {\n          res.status(204).end();\n        });\n    }\n  };\n}\n\nfunction removeAllEntity(res) {\n  return function () {\n    if (entity) {\n      return entity.remove()\n        .then(() => {\n          res.status(204).end();\n        });\n    }\n  };\n}\n\nfunction handleEntityNotFound(res) {\n  return function (entity) {\n    if (!entity) {\n      res.status(404).end();\n      return null;\n    }\n    return entity;\n  };\n}\n\nfunction handleError(res, statusCode) {\n  statusCode = statusCode || 500;\n  return function (err) {\n    res.status(statusCode).send(err);\n  };\n}\n\n// Gets a list of Events\nexport function index(req, res) {\n  return Event.find()\n    .populate('eventType performer location website')\n    .exec()\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\nexport function getEventByDatesRangeAndType(req, res) {\n  let dateFrom = moment.unix(req.params.dateFrom / 1000).toDate();\n  let type = req.params.eventType;\n  let dateTo = moment.unix(req.params.dateTo / 1000).toDate();\n  let query = {\"startDate\": {\"$gte\": dateFrom, \"$lt\": dateTo}};\n  let limit = Number(req.params.limit);\n  let skip = Number(req.params.skip);\n  return Event.find(query)\n    .limit(limit)\n    .skip(skip)\n    .populate('eventType performer location website')\n    .exec(function (err, events) {\n      Event.count(query).exec(function (err, count) {\n        res.status(200).json({\n          events: events,\n          total: count\n        });\n        //respondWithResult()\n      })\n    })\n    //.exec()\n    //.then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n\n// Gets a single Event from the DB\nexport function show(req, res) {\n  console.log(\"show\");\n  return Event.findById(req.params.id)\n    .populate('eventType')\n    .exec()\n    .then(handleEntityNotFound(res))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Creates a new Event in the DB\nexport function create(req, res) {\n  return Event.create(req.body)\n    .then(respondWithResult(res, 201))\n    .catch(handleError(res));\n}\n\n// Updates an existing Event in the DB\nexport function update(req, res) {\n  if (req.body._id) {\n    delete req.body._id;\n  }\n  return Event.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(saveUpdates(req.body))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Deletes a Event from the DB\nexport function destroy(req, res) {\n  return Event.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(removeEntity(res))\n    .catch(handleError(res));\n}\n\n// Deletes all events\nexport function destroyAll(req, res) {\n  Event.find().exec()\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n  //return Event.remove({}).exec()\n  //  .then(respondWithResult(\"ok\",200))\n  //  .then(respondWithResult(\"ok\",200))\n  //  .catch(handleError(res));\n}\n\n//test function\n\nexport function test(req, res) {\n  console.log(\"Start:\")\n  var request = require(\"request\");\n  var cheerio = require(\"cheerio\");\n\n  request({\n    uri: \"http://ionicabizau.net\",\n  }, function (error, response, body) {\n    var $ = cheerio.load(body);\n    console.log(\"Got Body\");\n\n    ///console.log($);\n\n    var list = [];\n    var index = 0\n\n    console.log(\"Body:\", body)\n    console.log(\"Left:\", $(\"a\")[0])\n    //$(\"a\").each(function() {\n    //  index++\n    //  console.log($(\".header h1\").text());\n    //\n    //  //console.log(text + \" -> \" + href);\n    //  res.status(200).json({\"test\":$(\".header h1\").text()});\n    //});\n\n  });\n\n  //\n}\n"],"sourceRoot":"/source/"}