{"version":3,"sources":["job/songclick.js"],"names":["job","cheerio","require","req","songkickName","songkickID","async","saveToDB","moment","page","resp","respondWithResult","res","statusCode","entity","status","json","handleError","err","send","scrape","url","cb","body","console","log","$","load","pageData","count","length","each","i","elem","el","html","obj","JSON","parse","text","attr","eventImage","date","startDate","format","endDate","push","locationCB","data","getSongKickID","findOne","name","then","response","_id","getHtmlPage","create","websiteUrl","rating","logoUrl","defaultImageUrl","active","message","save","checkWebsiteInDB"],"mappings":"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","file":"songclick.js","sourcesContent":["\"use strict\"\n\n// Import the dependencies\n// import _ from 'lodash';\n// import show_by_date_event from '../api/event/event.model';\nimport website from '../api/website/website.model';\n\nconst cheerio = require(\"cheerio\"),\n    req = require(\"tinyreq\");\nconst songkickName = \"Songkick\";\nvar songkickID = \"\";\nvar async = require('async');\nvar saveToDB = require('./util/saveToDB');\nvar moment = require('moment');\nvar page = 0;\nvar resp;\n// Define the scrape function\nfunction respondWithResult(res, statusCode) {\n    statusCode = statusCode || 200;\n    return function(entity) {\n        if (entity) {\n            res.status(statusCode).json(entity);\n        }\n    };\n}\n\nfunction handleError(res, statusCode) {\n    statusCode = statusCode || 500;\n    return function(err) {\n        res.status(statusCode).send(err);\n    };\n}\n\nfunction scrape(url, cb) {\n    // 1. Create the request\n\n    req(url, (err, body) => {\n        if (err) {\n            console.log(\"error:\", err)\n            return cb(err);\n        }\n        // 2. Parse the HTML\n        let $ = cheerio.load(body),\n            pageData = [];\n        var count = $(\"#event-listings li[title]\").length;\n        if (count > 0) {\n            $(\"#event-listings li[title]\").each(function(i, elem) {\n                let el = cheerio.load($(this).html());\n                let obj = JSON.parse(el(\".microformat script\").text());\n                obj = obj[0]\n                obj.url = \"https://www.songkick.com\" + el(\".thumb\").attr(\"href\");\n                obj.eventImage = \"http:\" + el('.thumb img').attr(\"src\");\n                var date = moment(obj.startDate).format('x');\n                obj.startDate = date;\n                obj.endDate = date;\n                pageData.push(obj);\n            });\n            cb(null, pageData);\n        } else {\n            cb(true, \"no more data\");\n\n        }\n    });\n}\n\n// Extract some data from my website\nfunction locationCB(data) {\n\n    respondWithResult(data, 200);\n}\n\nfunction getSongKickID(res) {\n    website.findOne({ name: songkickName })\n        .then(function(response) {\n            if (response !== null) {\n                songkickID = response._id;\n                //parceResult(data, res);\n                getHtmlPage();\n            } else {\n                website.create({\n                    name: songkickName,\n                    websiteUrl: \"https://www.songkick.com\",\n                    rating: 5,\n                    logoUrl: \"https://www.songkick.com\",\n                    defaultImageUrl: \"http://assets.sk-static.com/assets/default_images/huge_avatar/default-event-798b09a.png\",\n                    active: true\n                }).then(function(response) {\n                    songkickID = response._id;\n                    getHtmlPage();\n                });\n            }\n        });\n}\nexport function job(req, res) {\n    console.log(\"Started\");\n    page = 0;\n    getSongKickID();\n    resp = res;\n    return res.status(200).json({ message: \"process started\" })\n}\n\nfunction getHtmlPage() {\n    page++;\n    console.log(\"Get Page:\", page);\n    scrape(\"https://www.songkick.com/metro_areas/24426-uk-london?utf8=true&page=\" + page //&filters[minDate]=\"+ dateFrom + \"&filters[maxDate]=\"+ dateTo + \"#date-filter-form\"\n        , (err, data) => {\n\n            //check the db for a songlick website\n            if (err) {\n                //process.exit();\n                console.log(\"End of process\");\n                return;\n            } else {\n                /// parceResult(data);\n                saveToDB.save(data, songkickID, getHtmlPage);\n            }\n        });\n}\n\n\nfunction checkWebsiteInDB() {\n\n}"]}