{"version":3,"sources":["job/london.eventful.js"],"names":["job","cheerio","require","req","webSiteName","sitePrefix","webSiteID","async","saveToDB","moment","page","resp","types","eventType","performerType","link","index","currentType","respondWithResult","res","statusCode","entity","status","json","handleError","err","send","scrape","url","cb","body","console","log","$","load","pageData","events","length","arr","each","i","element","el","html","performerName","attr","split","obj","name","location","text","startDate","tz","format","endDate","performer","price","eventImage","active","website","push","locationCB","data","getWebSiteID","findOne","then","response","_id","getHtmlPage","create","websiteUrl","rating","logoUrl","defaultImageUrl","message","goToNextCategory","toString","save","checkWebsiteInDB"],"mappings":"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","file":"london.eventful.js","sourcesContent":["\"use strict\";\n\n// Import the dependencies\nimport website from '../api/website/website.model';\n\nconst cheerio = require(\"cheerio\"),\n    req = require(\"tinyreq\");\nconst webSiteName = \"london.eventful.com\";\nconst sitePrefix = 'http://london.eventful.com';\nvar webSiteID = \"\";\nvar async = require('async');\nvar saveToDB = require('./util/saveToDB');\nvar moment = require('moment-timezone');\nvar page = 0;\nvar resp;\nconst types = [\n\n\n    {\n        eventType: 'SportEvent',\n        performerType: 'sportPerformer',\n        link: 'http://london.eventful.com/v2/tools/events/faceted_search?' +\n            'type=asynch' +\n            '&location_type=metro_id&location_id=67' +\n            '&sort=rec&page_size=100' +\n            '&when=future&worldwide=0' +\n            '&category=sports' +\n            '&_s_category=sports' +\n            '&page_number='\n    },\n    {\n        eventType: 'MusicEvent',\n        performerType: 'MusicPerformer',\n        link: 'http://london.eventful.com/v2/tools/events/faceted_search?' +\n            'type=asynch' +\n            '&location_type=metro_id&location_id=67' +\n            '&sort=rec&page_size=100' +\n            '&when=future&worldwide=0' +\n            '&category=music' +\n            '&_s_category=music' +\n            '&page_number='\n    }\n    // ,\n    // {\n    //   eventType: 'TheaterEvent',\n    //   performerType: 'TheaterPerformer',\n    //   link: 'http://tickets.london/search?browseorder=soonest&dend=26%2F12%2F2016&distance=0&availableonly=False&showfavourites=True&se=False&s=theatre&pageSize=30&pageIndex='\n    // }\n]\nvar index = 0\nvar currentType = types[0];\n// Define the scrape function\nfunction respondWithResult(res, statusCode) {\n    statusCode = statusCode || 200;\n    return function(entity) {\n        if (entity) {\n            res.status(statusCode).json(entity);\n        }\n    };\n}\n\nfunction handleError(res, statusCode) {\n    statusCode = statusCode || 500;\n    return function(err) {\n        res.status(statusCode).send(err);\n    };\n}\n\nfunction scrape(url, cb) {\n    // 1. Create the request\n    req(url, (err, body) => {\n        if (err) {\n            console.log(\"error:\", err)\n            return cb(err);\n        }\n\n        // 2. Parse the HTML\n        let $ = cheerio.load(body),\n            pageData = [];\n        let events = $('#events-list li[itemscope]');\n        if (events.length == 0) {\n            console.log('events.length', events.length)\n            cb(true, \"no more data\");\n        } else {\n            let arr = [];\n            events.each(function(i, element) {\n\n                let el = cheerio.load($(this).html());\n                let performerName = el('h4 a').attr('title').split(' - ');\n                performerName = performerName[0];\n                let obj = {\n                    '@type': currentType.eventType,\n                    name: el('h4 a').attr('title'),\n                    url: el('.tn-frame').attr(\"href\"),\n                    location: {\n                        \"name\": el('.event-meta span').text()\n                            //,\n                            //\"link\": el('p a').attr(\"href\")\n                    },\n                    startDate: moment.tz(moment(el('.event-meta strong').attr('content')), \"Europe/London\").format('x'), ///el('.event-meta strong').attr('content'),\n                    endDate: moment.tz(moment(el('.event-meta strong').attr('content')), \"Europe/London\").format('x'),\n                    performer: [{\n                        '@type': currentType.performerType,\n                        'name': performerName\n                            //'sameAs': sitePrefix + el('h3 a').attr(\"href\")\n                    }],\n                    price: '',\n                    eventImage: el('.tn-frame img').attr(\"src\"),\n                    active: true,\n                    website: webSiteID\n                };\n                //console.log('Object:', obj);\n                //console.log('url:', obj.eventImage);\n                arr.push(obj);\n            })\n            cb(null, arr);\n        }\n    });\n}\n\n// Extract some data from my website\nfunction locationCB(data) {\n\n    respondWithResult(data, 200);\n}\n\nfunction getWebSiteID(res) {\n    website.findOne({ name: webSiteName })\n        .then(function(response) {\n            if (response !== null) {\n                webSiteID = response._id;\n                //parceResult(data, res);\n                getHtmlPage();\n            } else {\n                website.create({\n                    name: webSiteName,\n                    websiteUrl: \"http://london.eventful.com\",\n                    rating: 5,\n                    logoUrl: \"\",\n                    defaultImageUrl: \"\",\n                    active: true\n                }).then(function(response) {\n                    webSiteID = response._id;\n                    getHtmlPage();\n                });\n            }\n        });\n}\nexport function job(req, res) {\n    console.log(\"Started\");\n    page = 0;\n    index = 0;\n    currentType = types[0];\n    getWebSiteID();\n    resp = res;\n    return res.status(200).json({ message: \"process started\" })\n}\n\nfunction goToNextCategory() {\n    index = index + 1;\n    currentType = types[index];\n    page = 0;\n    getHtmlPage();\n}\n\nfunction getHtmlPage() {\n    page++;\n    //console.log(\"Get Page:\", page);\n    //console.log('Page:', currentType.link + page.toString());\n    scrape(currentType.link + page.toString(), (err, data) => {\n\n        if (err) {\n            console.log(index);\n            if (index < 1) {\n                goToNextCategory()\n            } else {\n                console.log(\"End of process\");\n                return;\n            }\n            //process.exit();\n\n        } else {\n            console.log(data);\n            /// parceResult(data);\n            saveToDB.save(data, webSiteID, getHtmlPage);\n        }\n    });\n}\n\nfunction checkWebsiteInDB() {\n\n}"]}