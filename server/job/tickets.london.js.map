{"version":3,"sources":["job/tickets.london.js"],"names":["job","cheerio","require","req","webSiteName","sitePrefix","webSiteID","async","saveToDB","moment","page","resp","types","eventType","performerType","link","index","currentType","respondWithResult","res","statusCode","entity","status","json","handleError","err","send","scrape","url","cb","body","console","log","$","load","pageData","events","length","datePre","arr","each","i","element","attribs","class","el","html","text","trim","split","p","date","children","data","format","isNaN","obj","name","attr","location","startDate","performer","price","eventImage","active","website","push","locationCB","getWebSiteID","findOne","then","response","_id","getHtmlPage","create","websiteUrl","rating","logoUrl","defaultImageUrl","message","goToNextCategory","toString","save","checkWebsiteInDB"],"mappings":"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","file":"job/tickets.london.js","sourcesContent":["\"use strict\";\n\n// Import the dependencies\nimport website from '../api/website/website.model';\n\nconst cheerio = require(\"cheerio\"), req = require(\"tinyreq\");\nconst webSiteName = \"tickets.london\";\nconst sitePrefix = 'http://tickets.london';\nvar webSiteID = \"\";\nvar async = require('async');\nvar saveToDB = require('./util/saveToDB');\nvar moment = require('moment-timezone');\nvar page = 0;\nvar resp;\nconst types = [\n  {\n    eventType: 'SportEvent',\n    performerType: 'sportPerformer',\n    link: 'http://tickets.london/search?browseorder=soonest&dend=26%2F12%2F2016&distance=0&availableonly=False&showfavourites=True&se=False&s=sport&pageSize=30&pageIndex='\n  },\n  {\n    eventType: 'TheatreEvent',\n    performerType: 'TheatrePerformer',\n    link: 'http://tickets.london/search?browseorder=soonest&dend=26%2F12%2F2016&distance=0&availableonly=False&showfavourites=True&se=False&s=theatre&pageSize=30&pageIndex='\n  },\n  {\n    eventType: 'MusicEvent',\n    performerType: 'MusicPerformer',\n    link: 'http://tickets.london/search?browseorder=soonest&dend=26%2F12%2F2016&distance=0&availableonly=False&showfavourites=True&se=False&s=music&pageSize=30&pageIndex='\n  }\n]\nvar index = 0\nvar currentType = types[0];\n// Define the scrape function\nfunction respondWithResult(res, statusCode) {\n  statusCode = statusCode || 200;\n  return function (entity) {\n    if (entity) {\n      res.status(statusCode).json(entity);\n    }\n  };\n}\nfunction handleError(res, statusCode) {\n  statusCode = statusCode || 500;\n  return function (err) {\n    res.status(statusCode).send(err);\n  };\n}\nfunction scrape(url, cb) {\n  // 1. Create the request\n  req(url, (err, body) => {\n    if (err) {\n      console.log(\"error:\", err)\n      return cb(err);\n    }\n\n    // 2. Parse the HTML\n    let $ = cheerio.load(body), pageData = [];\n    let events = $('#search-results .results-div, #search-results article');\n    if (events.length == 0) {\n      console.log('events.length', events.length)\n      cb(true, \"no more data\");\n    } else {\n      let datePre = [];\n      let arr = [];\n      events.each(function (i, element) {\n        ///console.log(element.attribs.class)\n        if (element.attribs.class === 'results-div') {\n          let el = cheerio.load($(this).html());\n          datePre = el('span').text().trim().split(' ');\n          //console.log(el('span').text().trim());\n        } else {\n          let el = cheerio.load($(this).html());\n          let p = el('p');\n          let date = moment(datePre[1] + ' ' + p[1].children[0].data, 'YYYY dddd Do MMMM at h:mm A').format('x');\n          if (!isNaN(date)) {\n            let obj = {\n              '@type': currentType.eventType,\n              name: el('h3 a').text(),\n              url: sitePrefix + el('h3 a').attr(\"href\"),\n              location: {\n                \"name\": el('p a').text(),\n                \"link\": el('p a').attr(\"href\")\n              },\n              startDate: date,\n              performer: {\n                '@type': currentType.performerType,\n                'name': sitePrefix + el('h3 a').text(),\n                'sameAs': sitePrefix + el('h3 a').attr(\"href\")\n              },\n              price: '',\n              eventImage: el('img').attr(\"src\"),\n              active: true,\n              website: webSiteID\n            };\n            arr.push(obj);\n          }\n        }\n      })\n      cb(null, arr);\n    }\n  });\n}\n\n// Extract some data from my website\nfunction locationCB(data) {\n\n  respondWithResult(data, 200);\n}\nfunction getWebSiteID(res) {\n  website.findOne({name: webSiteName})\n    .then(function (response) {\n      if (response !== null) {\n        webSiteID = response._id;\n        //parceResult(data, res);\n        getHtmlPage();\n      } else {\n        website.create({\n          name: webSiteName,\n          websiteUrl: \"http://tickets.london\",\n          rating: 5,\n          logoUrl: \"\",\n          defaultImageUrl: \"\",\n          active: true\n        }).then(function (response) {\n          webSiteID = response._id;\n          getHtmlPage();\n        });\n      }\n    });\n}\nexport function job(req, res) {\n  console.log(\"Started\");\n  page = 0;\n  index = 0;\n  currentType = types[0];\n  getWebSiteID();\n  resp = res;\n  return res.status(200).json({message: \"process started\"})\n}\nfunction goToNextCategory(){\n  index = index + 1;\n  currentType = types[index];\n  page = 0;\n  getHtmlPage();\n}\nfunction getHtmlPage() {\n  page++;\n  //console.log(\"Get Page:\", page);\n  //console.log('Page:', currentType.link + page.toString());\n  scrape(currentType.link + page.toString()\n    , (err, data) => {\n\n      if (err) {\n        console.log(index);\n        if (index < 2) {\n          goToNextCategory()\n        } else {\n          console.log(\"End of process\");\n          return;\n        }\n        //process.exit();\n\n      } else {\n        /// parceResult(data);\n        saveToDB.save(data, webSiteID, getHtmlPage);\n      }\n    });\n}\n\nfunction checkWebsiteInDB() {\n\n}\n"],"sourceRoot":"/source/"}