{"version":3,"sources":["job/tickets.london.js"],"names":["job","cheerio","require","req","xRay","x","webSiteName","sitePrefix","webSiteID","async","saveToDB","moment","page","resp","types","eventType","performerType","link","index","currentType","respondWithResult","res","statusCode","entity","status","json","handleError","err","send","scrape","url","cb","console","log","data","body","$","load","pageData","events","length","datePre","arr","each","i","element","attribs","class","el","html","text","trim","split","p","date","tz","children","format","name","isNaN","obj","attr","location","startDate","performer","price","eventImage","active","website","push","locationCB","getWebSiteID","findOne","then","response","_id","getHtmlPage","create","websiteUrl","rating","logoUrl","defaultImageUrl","message","goToNextCategory","toString","save","checkWebsiteInDB"],"mappings":"AAAA;;AAEA;;;;;QA8JgBA,G,GAAAA,G;;AA7JhB;;;;;;AAEA,IAAMC,UAAUC,QAAQ,SAAR,CAAhB;AAAA,IACIC,MAAMD,QAAQ,SAAR,CADV;AAEA,IAAME,OAAOF,QAAQ,OAAR,CAAb;AACA,IAAIG,IAAID,MAAR;;AAEA,IAAME,cAAc,gBAApB;AACA,IAAMC,aAAa,uBAAnB;AACA,IAAIC,YAAY,EAAhB;AACA,IAAIC,QAAQP,QAAQ,OAAR,CAAZ;AACA,IAAIQ,WAAWR,QAAQ,iBAAR,CAAf;AACA,IAAIS,SAAST,QAAQ,iBAAR,CAAb;AACA,IAAIU,OAAO,CAAX;AACA,IAAIC,IAAJ;AACA,IAAMC,QAAQ;;AAEV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACIC,eAAW,cADf;AAEIC,mBAAe,kBAFnB;AAGIC,UAAM;AAHV,CAZU,CAAd;AAkBA,IAAIC,QAAQ,CAAZ;AACA,IAAIC,cAAcL,MAAM,CAAN,CAAlB;AACA;AACA,SAASM,iBAAT,CAA2BC,GAA3B,EAAgCC,UAAhC,EAA4C;AACxCA,iBAAaA,cAAc,GAA3B;AACA,WAAO,UAASC,MAAT,EAAiB;AACpB,YAAIA,MAAJ,EAAY;AACRF,gBAAIG,MAAJ,CAAWF,UAAX,EAAuBG,IAAvB,CAA4BF,MAA5B;AACH;AACJ,KAJD;AAKH;;AAED,SAASG,WAAT,CAAqBL,GAArB,EAA0BC,UAA1B,EAAsC;AAClCA,iBAAaA,cAAc,GAA3B;AACA,WAAO,UAASK,GAAT,EAAc;AACjBN,YAAIG,MAAJ,CAAWF,UAAX,EAAuBM,IAAvB,CAA4BD,GAA5B;AACH,KAFD;AAGH;;AAED,SAASE,MAAT,CAAgBC,GAAhB,EAAqBC,EAArB,EAAyB;AACrBC,YAAQC,GAAR,CAAYH,GAAZ;AACAzB,MAAEyB,GAAF,EAAO,WAAP,EAAoB,UAACH,GAAD,EAAMO,IAAN,EAAe;AAC3B;AACAF,gBAAQC,GAAR,CAAYC,IAAZ;AACH,KAHL;AAII;AACJ/B,QAAI2B,GAAJ,EAAS,UAACH,GAAD,EAAMQ,IAAN,EAAe;AACpB,YAAIR,GAAJ,EAAS;AACLK,oBAAQC,GAAR,CAAY,QAAZ,EAAsBN,GAAtB;AACA,mBAAOI,GAAGJ,GAAH,CAAP;AACH;;AAED;AACA,YAAIS,IAAInC,QAAQoC,IAAR,CAAaF,IAAb,CAAR;AAAA,YACIG,WAAW,EADf;;AAGA,YAAIC,SAAS,EAAb,CAVoB,CAUJ;;AAEhB;AACA,YAAIA,OAAOC,MAAP,IAAiB,CAArB,EAAwB;AACpBR,oBAAQC,GAAR,CAAY,eAAZ,EAA6BM,OAAOC,MAApC;AACAT,eAAG,IAAH,EAAS,cAAT;AACH,SAHD,MAGO;AAAA;AACH,oBAAIU,UAAU,EAAd;AACA,oBAAIC,MAAM,EAAV;AACAH,uBAAOI,IAAP,CAAY,UAASC,CAAT,EAAYC,OAAZ,EAAqB;AAC7B;AACA,wBAAIA,QAAQC,OAAR,CAAgBC,KAAhB,KAA0B,aAA9B,EAA6C;AACzC,4BAAIC,KAAK/C,QAAQoC,IAAR,CAAaD,EAAE,IAAF,EAAQa,IAAR,EAAb,CAAT;AACAR,kCAAUO,GAAG,MAAH,EAAWE,IAAX,GAAkBC,IAAlB,GAAyBC,KAAzB,CAA+B,GAA/B,CAAV;AACA;AACH,qBAJD,MAIO;AACH,4BAAIJ,MAAK/C,QAAQoC,IAAR,CAAaD,EAAE,IAAF,EAAQa,IAAR,EAAb,CAAT;AACA,4BAAII,IAAIL,IAAG,GAAH,CAAR;AACA,4BAAIM,OAAO3C,OAAO4C,EAAP,CAAUd,QAAQ,CAAR,IAAa,GAAb,GAAmBY,EAAE,CAAF,EAAKG,QAAL,CAAc,CAAd,EAAiBtB,IAA9C,EAAoD,6BAApD,EAAmF,eAAnF,EAAoGuB,MAApG,CAA2G,GAA3G,CAAX;AACA,4BAAIC,OAAO,EAAX;AACA,4BAAIV,IAAG,MAAH,EAAWR,MAAX,GAAoB,CAAxB,EAA2B;AACvB,gCAAIE,OAAMM,IAAG,MAAH,CAAV;AACI;AACJU,mCAAOhB,KAAI,CAAJ,EAAOc,QAAP,CAAgB,CAAhB,EAAmBtB,IAA1B;AACA;AAEH,yBAND,MAMO;AACHwB,mCAAOV,IAAG,MAAH,EAAWE,IAAX,EAAP;AACA;AACH;AACD,4BAAI,CAACS,MAAML,IAAN,CAAL,EAAkB;AACd,gCAAIM,MAAM;AACN,yCAASzC,YAAYJ,SADf;AAEN2C,sCAAMA,IAFA;AAGN5B,qCAAKvB,aAAayC,IAAG,MAAH,EAAWa,IAAX,CAAgB,MAAhB,CAHZ;AAINC,0CAAU;AACN,4CAAQd,IAAG,KAAH,EAAUE,IAAV,EADF;AAEN,4CAAQF,IAAG,KAAH,EAAUa,IAAV,CAAe,MAAf;AAFF,iCAJJ;AAQNE,2CAAWT,IARL;AASNU,2CAAW;AACP,6CAAS7C,YAAYH,aADd;AAEP,4CAAQT,aAAayC,IAAG,MAAH,EAAWE,IAAX,EAFd;AAGP,8CAAU3C,aAAayC,IAAG,MAAH,EAAWa,IAAX,CAAgB,MAAhB;AAHhB,iCATL;AAcNI,uCAAO,EAdD;AAeNC,4CAAYlB,IAAG,KAAH,EAAUa,IAAV,CAAe,KAAf,CAfN;AAgBNM,wCAAQ,IAhBF;AAiBNC,yCAAS5D;AAjBH,6BAAV;AAmBA;AACAkC,gCAAI2B,IAAJ,CAAST,GAAT;AACH;AACJ;AACJ,iBA7CD;AA8CA7B,mBAAG,IAAH,EAASW,GAAT;AAjDG;AAkDN;AACJ,KAnED;AAoEH;;AAED;AACA,SAAS4B,UAAT,CAAoBpC,IAApB,EAA0B;;AAEtBd,sBAAkBc,IAAlB,EAAwB,GAAxB;AACH;;AAED,SAASqC,YAAT,CAAsBlD,GAAtB,EAA2B;AACvB,sBAAQmD,OAAR,CAAgB,EAAEd,MAAMpD,WAAR,EAAhB,EACKmE,IADL,CACU,UAASC,QAAT,EAAmB;AACrB,YAAIA,aAAa,IAAjB,EAAuB;AACnBlE,wBAAYkE,SAASC,GAArB;AACA;AACAC;AACH,SAJD,MAIO;AACH,8BAAQC,MAAR,CAAe;AACXnB,sBAAMpD,WADK;AAEXwE,4BAAY,uBAFD;AAGXC,wBAAQ,CAHG;AAIXC,yBAAS,EAJE;AAKXC,iCAAiB,EALN;AAMXd,wBAAQ;AANG,aAAf,EAOGM,IAPH,CAOQ,UAASC,QAAT,EAAmB;AACvBlE,4BAAYkE,SAASC,GAArB;AACAC;AACH,aAVD;AAWH;AACJ,KAnBL;AAoBH;AACM,SAAS5E,GAAT,CAAaG,GAAb,EAAkBkB,GAAlB,EAAuB;AAC1BW,YAAQC,GAAR,CAAY,SAAZ;AACArB,WAAO,CAAP;AACAM,YAAQ,CAAR;AACAC,kBAAcL,MAAM,CAAN,CAAd;AACAyD;AACA1D,WAAOQ,GAAP;AACA,WAAOA,IAAIG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEyD,SAAS,iBAAX,EAArB,CAAP;AACH;;AAED,SAASC,gBAAT,GAA4B;AACxBjE,YAAQA,QAAQ,CAAhB;AACAC,kBAAcL,MAAMI,KAAN,CAAd;AACAN,WAAO,CAAP;AACAgE;AACH;;AAED,SAASA,WAAT,GAAuB;AACnBhE;AACA;AACA;AACAiB,WAAOV,YAAYF,IAAZ,GAAmBL,KAAKwE,QAAL,EAA1B,EAA2C,UAACzD,GAAD,EAAMO,IAAN,EAAe;;AAEtD,YAAIP,GAAJ,EAAS;AACLK,oBAAQC,GAAR,CAAYf,KAAZ;AACA,gBAAIA,QAAQ,CAAZ,EAAe;AACXiE;AACH,aAFD,MAEO;AACHnD,wBAAQC,GAAR,CAAY,gBAAZ;AACA;AACH;AACD;AAEH,SAVD,MAUO;AACH;AACAvB,qBAAS2E,IAAT,CAAcnD,IAAd,EAAoB1B,SAApB,EAA+BoE,WAA/B;AACH;AACJ,KAhBD;AAiBH;;AAED,SAASU,gBAAT,GAA4B,CAE3B","file":"tickets.london.js","sourcesContent":["\"use strict\";\n\n// Import the dependencies\nimport website from '../api/website/website.model';\n\nconst cheerio = require(\"cheerio\"),\n    req = require(\"tinyreq\");\nconst xRay = require('x-ray');\nvar x = xRay();\n\nconst webSiteName = \"tickets.london\";\nconst sitePrefix = 'http://tickets.london';\nvar webSiteID = \"\";\nvar async = require('async');\nvar saveToDB = require('./util/saveToDB');\nvar moment = require('moment-timezone');\nvar page = 0;\nvar resp;\nconst types = [\n\n    // {\n    //     eventType: 'MusicEvent',\n    //     performerType: 'MusicPerformer',\n    //     link: 'http://tickets.london/search?browseorder=soonest&distance=0&availableonly=False&showfavourites=True&se=False&s=music&pageSize=30&pageIndex='\n    // },\n    // {\n    //     eventType: 'SportEvent',\n    //     performerType: 'sportPerformer',\n    //     link: 'http://tickets.london/search?browseorder=soonest&distance=0&availableonly=False&showfavourites=True&se=False&s=sport&pageSize=30&pageIndex='\n    // },\n    {\n        eventType: 'TheaterEvent',\n        performerType: 'TheaterPerformer',\n        link: 'http://tickets.london/search?BrowseOrder=Soonest&s=theatre&c=40&c=191&c=195&c=204&c=192&c=274&c=198&c=200&c=196&c=202&q=&dst=&dend=2017-03-31&l='\n    }\n]\nvar index = 0\nvar currentType = types[0];\n// Define the scrape function\nfunction respondWithResult(res, statusCode) {\n    statusCode = statusCode || 200;\n    return function(entity) {\n        if (entity) {\n            res.status(statusCode).json(entity);\n        }\n    };\n}\n\nfunction handleError(res, statusCode) {\n    statusCode = statusCode || 500;\n    return function(err) {\n        res.status(statusCode).send(err);\n    };\n}\n\nfunction scrape(url, cb) {\n    console.log(url)\n    x(url, 'body@html')((err, data) => {\n            debugger;\n            console.log(data);\n        })\n        // 1. Create the request\n    req(url, (err, body) => {\n        if (err) {\n            console.log(\"error:\", err)\n            return cb(err);\n        }\n\n        // 2. Parse the HTML\n        let $ = cheerio.load(body),\n            pageData = [];\n\n        let events = [] //$('script');\n\n        debugger;\n        if (events.length == 0) {\n            console.log('events.length', events.length)\n            cb(true, \"no more data\");\n        } else {\n            let datePre = [];\n            let arr = [];\n            events.each(function(i, element) {\n                ///console.log(element.attribs.class)\n                if (element.attribs.class === 'results-div') {\n                    let el = cheerio.load($(this).html());\n                    datePre = el('span').text().trim().split(' ');\n                    //console.log(el('span').text().trim());\n                } else {\n                    let el = cheerio.load($(this).html());\n                    let p = el('p');\n                    let date = moment.tz(datePre[1] + ' ' + p[1].children[0].data, 'YYYY dddd Do MMMM at h:mm A', \"Europe/London\").format('x');\n                    let name = '';\n                    if (el('h3 a').length > 1) {\n                        let arr = el('h3 a')\n                            //console.log('count ' + el('h3 a').length, arr);\n                        name = arr[0].children[0].data;\n                        //console.log('count ' + el('h3 a').length, arr[0].children[0].data);\n\n                    } else {\n                        name = el('h3 a').text();\n                        //console.log('count 1', el('h3 a').text());\n                    }\n                    if (!isNaN(date)) {\n                        let obj = {\n                            '@type': currentType.eventType,\n                            name: name,\n                            url: sitePrefix + el('h3 a').attr(\"href\"),\n                            location: {\n                                \"name\": el('p a').text(),\n                                \"link\": el('p a').attr(\"href\")\n                            },\n                            startDate: date,\n                            performer: {\n                                '@type': currentType.performerType,\n                                'name': sitePrefix + el('h3 a').text(),\n                                'sameAs': sitePrefix + el('h3 a').attr(\"href\")\n                            },\n                            price: '',\n                            eventImage: el('img').attr(\"src\"),\n                            active: true,\n                            website: webSiteID\n                        };\n                        //console.log('Image:', obj.eventImage);\n                        arr.push(obj);\n                    }\n                }\n            })\n            cb(null, arr);\n        }\n    });\n}\n\n// Extract some data from my website\nfunction locationCB(data) {\n\n    respondWithResult(data, 200);\n}\n\nfunction getWebSiteID(res) {\n    website.findOne({ name: webSiteName })\n        .then(function(response) {\n            if (response !== null) {\n                webSiteID = response._id;\n                //parceResult(data, res);\n                getHtmlPage();\n            } else {\n                website.create({\n                    name: webSiteName,\n                    websiteUrl: \"http://tickets.london\",\n                    rating: 5,\n                    logoUrl: \"\",\n                    defaultImageUrl: \"\",\n                    active: true\n                }).then(function(response) {\n                    webSiteID = response._id;\n                    getHtmlPage();\n                });\n            }\n        });\n}\nexport function job(req, res) {\n    console.log(\"Started\");\n    page = 0;\n    index = 0;\n    currentType = types[0];\n    getWebSiteID();\n    resp = res;\n    return res.status(200).json({ message: \"process started\" })\n}\n\nfunction goToNextCategory() {\n    index = index + 1;\n    currentType = types[index];\n    page = 0;\n    getHtmlPage();\n}\n\nfunction getHtmlPage() {\n    page++;\n    //console.log(\"Get Page:\", page);\n    //console.log('Page:', currentType.link + page.toString());\n    scrape(currentType.link + page.toString(), (err, data) => {\n\n        if (err) {\n            console.log(index);\n            if (index < 2) {\n                goToNextCategory()\n            } else {\n                console.log(\"End of process\");\n                return;\n            }\n            //process.exit();\n\n        } else {\n            /// parceResult(data);\n            saveToDB.save(data, webSiteID, getHtmlPage);\n        }\n    });\n}\n\nfunction checkWebsiteInDB() {\n\n}"]}