{"version":3,"sources":["job/tickets.london.js"],"names":["job","cheerio","require","req","webSiteName","webSiteID","async","saveToDB","moment","page","resp","respondWithResult","res","statusCode","entity","status","json","handleError","err","send","scrape","url","data","cb","body","console","log","$","load","pageData","count","length","each","i","elem","el","html","obj","JSON","parse","text","attr","eventImage","push","locationCB","getWebSiteID","findOne","name","then","response","_id","getHtmlPage","create","websiteUrl","rating","logoUrl","defaultImageUrl","active","message","title","description","checkWebsiteInDB"],"mappings":"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","file":"job/tickets.london.js","sourcesContent":["\"use strict\"\n\n// Import the dependencies\nimport _ from 'lodash';\nimport website from '../api/website/website.model';\n\nconst cheerio = require(\"cheerio\"), req = require(\"tinyreq\");\nconst webSiteName = \"tickets.london\";\nvar webSiteID = \"\";\nvar async = require('async');\nvar saveToDB = require('./util/saveToDB');\nvar moment = require('moment');\nvar page = 0;\nvar resp;\n// Define the scrape function\nfunction respondWithResult(res, statusCode) {\n  statusCode = statusCode || 200;\n  return function (entity) {\n    if (entity) {\n      res.status(statusCode).json(entity);\n    }\n  };\n}\n\nfunction handleError(res, statusCode) {\n  statusCode = statusCode || 500;\n  return function (err) {\n    res.status(statusCode).send(err);\n  };\n}\n\nfunction scrape(url, data, cb) {\n  // 1. Create the request\n  req(url, (err, body) => {\n    if (err) {\n      console.log(\"error:\", err)\n      return cb(err);\n    }\n\n    // 2. Parse the HTML\n    let $ = cheerio.load(body), pageData = [];\n    var count = $(\"#event-listings li[title]\").length;\n    if (count > 0) {\n      $(\"#event-listings li[title]\").each(function (i, elem) {\n        let el = cheerio.load($(this).html());\n        let obj = JSON.parse(el(\".microformat script\").text());\n        obj = obj[0]\n        obj.url = \"https://www.songkick.com\" + el(\".thumb\").attr(\"href\");\n        obj.eventImage = el('.thumb img').attr(\"src\");\n        pageData.push(obj);\n      });\n      cb(null, pageData);\n    } else {\n      cb(true, \"no more data\");\n\n    }\n\n\n  });\n}\n\n// Extract some data from my website\nfunction locationCB(data) {\n\n  respondWithResult(data, 200);\n}\nfunction getWebSiteID(res) {\n  website.findOne({name: webSiteName})\n    .then(function (response) {\n      if (response !== null) {\n        webSiteID = response._id;\n        //parceResult(data, res);\n        getHtmlPage();\n      } else {\n        website.create({\n          name: webSiteName,\n          websiteUrl: \"http://www.visitlondon.com\",\n          rating: 5,\n          logoUrl: \"https://pbs.twimg.com/profile_images/771414363307708416/MxAAQdjT.jpg\",\n          defaultImageUrl: \"http://assets.sk-static.com/assets/default_images/huge_avatar/default-event-798b09a.png\",\n          active: true\n        }).then(function (response) {\n          webSiteID = response._id;\n          getHtmlPage();\n        });\n      }\n    });\n}\nexport function job(req, res) {\n  console.log(\"Started\");\n  page = 0;\n  getWebSiteID();\n  resp=res;\n  return res.status(200).json({message: \"process started\"})\n}\n\nfunction getHtmlPage() {\n  page++;\n  console.log(\"Get Page:\", page);\n  scrape(\"http://tickets.london/search?browseorder=soonest&distance=0&availableonly=False&se=False&pageSize=30&c=3&c=156&pageIndex=\"+page\n    , {\n      //scrape(\"http://www.w3schools.com/\", {\n      // Get the website title (from the top header)\n      title: \"a.w3schools-logo\"\n      // ...and the description\n      , description: \".listing li\"\n    }, (err, data) => {\n\n      //check the db for a songlick website\n      if (err) {\n        //process.exit();\n        console.log(\"End of process\");\n        return;\n      } else {\n       /// parceResult(data);\n       // saveToDB.save(data, webSiteID, getHtmlPage);\n      }\n    });\n}\n\n\nfunction checkWebsiteInDB() {\n\n}\n"],"sourceRoot":"/source/"}